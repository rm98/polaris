import { KubeConfig } from '@kubernetes/client-node';
import { <%= eStratKind %>, <%= initPolarisLibFn %> as initMappingsLib } from '<%= eStratTypePkg %>';
import { Logger } from '@rm98/polaris-core';
import { initPolarisKubernetes } from '@rm98/polaris-kubernetes';
import { <%= eStratControllerName %> } from './app/elasticity';

// Load the KubeConfig and initialize the @rm98/polaris-kubernetes library.
const k8sConfig = new KubeConfig();
k8sConfig.loadFromDefault();
const polarisRuntime = initPolarisKubernetes(k8sConfig);

// Initialize the used Polaris mapping libraries
initMappingsLib(polarisRuntime);

// Create an ElasticityStrategyManager and watch the supported elasticity strategy kinds.
const manager = polarisRuntime.createElasticityStrategyManager();
manager.startWatching({
    kindsToWatch: [
        { kind: new <%= eStratKind %>(), controller: new <%= eStratControllerName %>(polarisRuntime) },
    ],
}).catch(error => {
    Logger.error(error);
    process.exit(1);
});
